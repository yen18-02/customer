import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import streamlit as st

# === 1. ƒê·ªçc v√† x·ª≠ l√Ω d·ªØ li·ªáu ===
@st.cache_data
def load_data():
    uploaded_file = st.file_uploader("üìÅ T·∫£i l√™n file CSV", type=["csv"])
    if uploaded_file is not None:
        df = pd.read_csv(uploaded_file)
        return df
    else:
        st.warning("‚ö†Ô∏è Vui l√≤ng t·∫£i l√™n file CSV ƒë·ªÉ ti·∫øp t·ª•c.")
        st.stop()
    # C·ªôt kh√¥ng x·ª≠ l√Ω s·ªë
    non_numeric_cols = ["CUST_ID", "COMMENT", "ITEM"]
    for col in df.columns:
        if col not in non_numeric_cols:
            df[col] = df[col].apply(clean_currency)

    df.dropna(inplace=True)
    return df

# === 2. Streamlit UI ===
st.set_page_config(page_title="Ph√¢n t√≠ch t√¢m l√Ω kh√°ch h√†ng", layout="wide")
st.title("üîç Ph√¢n t√≠ch t√¢m l√Ω kh√°ch h√†ng")
df = load_data()

# === 3. Ph√¢n c·ª•m KMeans ===
st.subheader("2Ô∏è‚É£ Ph√¢n c·ª•m kh√°ch h√†ng (KMeans)")

non_numeric_cols = ["CUST_ID", "COMMENT", "ITEM"]
X = df.drop(columns=non_numeric_cols)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

kmeans = KMeans(n_clusters=3, random_state=42)
clusters = kmeans.fit_predict(X_scaled)
df["CLUSTER"] = clusters

# === 4. Hi·ªÉn th·ªã k·∫øt qu·∫£ ===
st.write("### K·∫øt qu·∫£ ph√¢n c·ª•m kh√°ch h√†ng")
st.dataframe(df[["CUST_ID", "CLUSTER", "COMMENT", "ITEM"]])

# === 5. Bi·ªÉu ƒë·ªì ph√¢n c·ª•m ===
st.write("### Ph√¢n b·ªë s·ªë l∆∞·ª£ng kh√°ch h√†ng theo c·ª•m")
cluster_counts = df["CLUSTER"].value_counts().sort_index()
fig, ax = plt.subplots()
sns.barplot(x=cluster_counts.index, y=cluster_counts.values, ax=ax)
ax.set_xlabel("C·ª•m")
ax.set_ylabel("S·ªë l∆∞·ª£ng kh√°ch h√†ng")
ax.set_title("Ph√¢n b·ªë theo c·ª•m")
st.pyplot(fig)
